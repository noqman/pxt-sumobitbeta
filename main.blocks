<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="#F)0R+mb30MMRHzL@i:(">REG_ADD_REVISION</variable><variable id="?s^1L8o9$~4]NhOx-I9r">I2C_ADDRESS</variable><variable id=".~_)7giwwbboO4+RA/w;">REG_ADD_SERVO_1</variable><variable id="-]mB-1yB[aD$?skm^#k;">REG_ADD_SERVO_2</variable><variable id=")sc5R94p/2$IXIeP:LO@">REG_ADD_PWM1</variable><variable id="_A]z?pga(DCV^T{SBZ$:">REG_ADD_DIR1</variable><variable id="jAsVptUhhV(]1m,%wc$q">REG_ADD_PWM2</variable><variable id="V2n.3J*w*Il;_ZuU0(T+">REG_ADD_DIR2</variable><variable id="b.{it#WovJ:Bc0lg{kVK">REG_ADD_VIN_HIGH</variable><variable id=".V380/[Ow3p$zH(%yQyE">REG_ADD_VIN_LOW</variable><variable id="B[^A3xL1Y1A$I5XU^b|i">REG_ADD_AN1_HIGH</variable><variable id="s-!(,.~;eb-^_(1BhfZ4">REG_ADD_AN1_LOW</variable><variable id="u?7R*0i6nr{~Qn(BTo{G">REG_ADD_AN2_HIGH</variable><variable id="/)yc};.numDp(/qw.yr1">REG_ADD_AN2_LOW</variable><variable id="OHw7owl2m2,K!l)^]:x3">REG_ADD_DIP</variable><variable id="~0w:(L=_RpFe[FTQKld=">REG_ADD_RESET</variable></variables><block type="pxt-on-start" id="dN,g*E]eU4/n!qQu}K}~" x="0" y="0"><statement name="HANDLER"><block type="variables_set" id=")KqY%7i}v|}]]-1!y8$l"><field name="VAR" id="#F)0R+mb30MMRHzL@i:(">REG_ADD_REVISION</field><comment pinned="false" h="80" w="160">Register address.</comment><value name="VALUE"><shadow type="math_number" id="hQ)H^#5sLp+sIg%p8FsR"><field name="NUM">0</field></shadow></value><next><block type="variables_set" id="|RZcnyK/0)l,]G69-q%;"><field name="VAR" id="?s^1L8o9$~4]NhOx-I9r">I2C_ADDRESS</field><value name="VALUE"><shadow type="math_number" id="59V*H[Yb_spq(~%UJtPC"><field name="NUM">9</field></shadow></value><next><block type="variables_set" id="0}-rjk?%Y)tQOQ)=81aR"><field name="VAR" id=".~_)7giwwbboO4+RA/w;">REG_ADD_SERVO_1</field><value name="VALUE"><shadow type="math_number" id="ZAod^NJ)/Tvg3{|x,9N="><field name="NUM">1</field></shadow></value><next><block type="variables_set" id="Uxl9vC/1b_on6.Oo%u!v"><field name="VAR" id="-]mB-1yB[aD$?skm^#k;">REG_ADD_SERVO_2</field><value name="VALUE"><shadow type="math_number" id="Uy~Oi|HX#@^UrFA{b!{D"><field name="NUM">2</field></shadow></value><next><block type="variables_set" id="?.aAs;iypnzc6,|#G6##"><field name="VAR" id=")sc5R94p/2$IXIeP:LO@">REG_ADD_PWM1</field><value name="VALUE"><shadow type="math_number" id="Q0J[m,PxPr.{Cgy_JmxC"><field name="NUM">3</field></shadow></value><next><block type="variables_set" id="P^23V44*$F}6|Od|EFM$"><field name="VAR" id="_A]z?pga(DCV^T{SBZ$:">REG_ADD_DIR1</field><value name="VALUE"><shadow type="math_number" id="YoV{*auELKQX$F/P/3JA"><field name="NUM">4</field></shadow></value><next><block type="variables_set" id="Z%8$}#%Bf61|=x0S6L*y"><field name="VAR" id="jAsVptUhhV(]1m,%wc$q">REG_ADD_PWM2</field><value name="VALUE"><shadow type="math_number" id="EMtENH[zb`#$oI*#e-j+"><field name="NUM">5</field></shadow></value><next><block type="variables_set" id="QGVP3p^2_k5^Ie_FwwBx"><field name="VAR" id="V2n.3J*w*Il;_ZuU0(T+">REG_ADD_DIR2</field><value name="VALUE"><shadow type="math_number" id="d[R8,o%6;*fD}![y{E7h"><field name="NUM">6</field></shadow></value><next><block type="variables_set" id="+$JtBmzlS4/m9$D7H.=u"><field name="VAR" id="b.{it#WovJ:Bc0lg{kVK">REG_ADD_VIN_HIGH</field><value name="VALUE"><shadow type="math_number" id="%A;fxbNu~+^l(Z1#D|i["><field name="NUM">7</field></shadow></value><next><block type="variables_set" id="T)$KI79DIxV*DCZ$tS-5"><field name="VAR" id=".V380/[Ow3p$zH(%yQyE">REG_ADD_VIN_LOW</field><value name="VALUE"><shadow type="math_number" id="o5/_[vL`e$2p8=[fGh[X"><field name="NUM">8</field></shadow></value><next><block type="variables_set" id="`kMVK:_a1sHBn.Z5^kAg"><field name="VAR" id="B[^A3xL1Y1A$I5XU^b|i">REG_ADD_AN1_HIGH</field><value name="VALUE"><shadow type="math_number" id="pW3cAc(@@a|{cMQsfWHq"><field name="NUM">9</field></shadow></value><next><block type="variables_set" id="DIGpHaht,f5D:!#!ZXUV"><field name="VAR" id="s-!(,.~;eb-^_(1BhfZ4">REG_ADD_AN1_LOW</field><value name="VALUE"><shadow type="math_number" id="9jLR9WJ~jvYu4T+yb{yU"><field name="NUM">10</field></shadow></value><next><block type="variables_set" id="zSd9%1(3DRdY;217~%;c"><field name="VAR" id="u?7R*0i6nr{~Qn(BTo{G">REG_ADD_AN2_HIGH</field><value name="VALUE"><shadow type="math_number" id="[)_oHTux3K$p8K_r/4A$"><field name="NUM">11</field></shadow></value><next><block type="variables_set" id="o~^$6P5SYWROXho,2wX["><field name="VAR" id="/)yc};.numDp(/qw.yr1">REG_ADD_AN2_LOW</field><value name="VALUE"><shadow type="math_number" id="$)4]-!G#-TJ?sN8g?t}i"><field name="NUM">12</field></shadow></value><next><block type="variables_set" id="V`@OGKAgf6$;q3AW*]GL"><field name="VAR" id="OHw7owl2m2,K!l)^]:x3">REG_ADD_DIP</field><value name="VALUE"><shadow type="math_number" id="T)@_5Ai))uG;*Vcp7l,S"><field name="NUM">13</field></shadow></value><next><block type="variables_set" id="SW5b.0j/?s_:rX=|5v[T"><field name="VAR" id="~0w:(L=_RpFe[FTQKld=">REG_ADD_RESET</field><value name="VALUE"><shadow type="math_number" id="}FIa!R+^+wUja7]*Fj-u"><field name="NUM">14</field></shadow></value><next><block type="device_set_pull" id="l:aN|pSg@sDuvt!Eidx`"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="/^zpPzydmBI:p4o0N|%]"><field name="pin">DigitalPin.P16</field></shadow></value><next><block type="device_set_pull" id="I`ANa`i$Yq8T_~wpvUqw"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="~^~antq0.c|pJ@E-DiYO"><field name="pin">DigitalPin.P15</field></shadow></value><next><block type="device_set_pull" id="UL-/x(+ngY;-FexrKbeO"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id=";+SeD1MV.Om@Mo]8*-m|"><field name="pin">DigitalPin.P14</field></shadow></value><next><block type="device_set_pull" id="7ap^{{eIm@)u+3pTEmCp"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="+WHu30%8o:B3~YRGP3sz"><field name="pin">DigitalPin.P13</field></shadow></value><next><block type="device_set_pull" id="ian:X!7AOAtESi|;VA4J"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="PN*Or,wV/:x$P:[HccB/"><field name="pin">DigitalPin.P12</field></shadow></value><next><block type="typescript_statement" id="#TH{eUso|L@DcdImquu0"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace sumobit {&#13;" line1="&#13;" line2="brakeMotor(MotorChannel.MR);&#13;" line3="brakeMotor(MotorChannel.ML);&#13;" line4="&#13;" line5="// Disable the servos.&#13;" line6="disableServo(ServoChannel.S1);&#13;" line7="disableServo(ServoChannel.S2);&#13;" line8="&#13;" line9="/**&#13;" line10=" * Limit the range of a number.&#13;" line11=" * @param value The number we want to limit.&#13;" line12=" * @param min Minimum value of the number.&#13;" line13=" * @param max Maximum value of the number.&#13;" line14=" */&#13;" line15="//% blockHidden=true&#13;" line16="//% blockId=sumobit_limit&#13;" line17="export function limit(value: number, min: number, max: number): number {&#13;" line18="    if (value &lt; min) {&#13;" line19="        value = min;&#13;" line20="    }&#13;" line21="    else if (value &gt; max) {&#13;" line22="        value = max;&#13;" line23="    }&#13;" line24="    return value;&#13;" line25="}&#13;" line26="&#13;" line27="&#13;" line28="/**&#13;" line29="     * I2C read from the register of RP2040.&#13;" line30="     * @param register Register address.&#13;" line31="     */&#13;" line32="//% blockHidden=true&#13;" line33="//% blockId=sumobit_i2c_read&#13;" line34="export function i2cRead(register: number): number {&#13;" line35="    let value = 0;&#13;" line36="    pins.i2cWriteNumber(I2C_ADDRESS, register, NumberFormat.UInt8LE, true);&#13;" line37="    value = pins.i2cReadNumber(I2C_ADDRESS, NumberFormat.UInt8LE);&#13;" line38="    return value;&#13;" line39="}&#13;" line40="&#13;" line41="&#13;" line42="&#13;" line43="/**&#13;" line44=" * I2C write to the register of RP2040.&#13;" line45=" * @param register Register address.&#13;" line46=" * @param data Data to write.&#13;" line47=" */&#13;" line48="//% blockHidden=true&#13;" line49="//% blockId=sumobit_i2c_write&#13;" line50="export function i2cWrite(register: number, data: number): void {&#13;" line51="    let buffer = pins.createBuffer(2);&#13;" line52="    buffer[0] = register;&#13;" line53="    buffer[1] = data;&#13;" line54="    pins.i2cWriteBuffer(I2C_ADDRESS, buffer);&#13;" line55="}&#13;" line56="    &#13;" line57="&#13;" line58="}" numlines="59"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>