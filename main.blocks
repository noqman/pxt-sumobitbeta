<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="1^dNyKL2ls+],o:{U5Zu">REG_ADD_REVISION</variable><variable id="Y3hc*Bt=MR3O4uSW}!Xh">I2C_ADDRESS</variable><variable id="!nZ{m_=rpqk]B`4Gra.X">REG_ADD_SERVO_1</variable><variable id="yoSh9{fX`x%;eSn`hUl~">REG_ADD_SERVO_2</variable><variable id="j;,!gwkC`g4!#E?M#Y[%">REG_ADD_PWM1</variable><variable id="PtU^d~lRd`fOAUl/Yc*q">REG_ADD_DIR1</variable><variable id="$-8}Ga]T$d,)rnCX@f-G">REG_ADD_PWM2</variable><variable id="s%czyZDM}vX6KVaR^1[;">REG_ADD_DIR2</variable><variable id="4]lKx)6*-=|!)J@uAh=S">REG_ADD_VIN_HIGH</variable><variable id="?RI![m`I0.)_~g|^I/|T">REG_ADD_VIN_LOW</variable><variable id="~(lsVZJ;spvH@.6,]RgH">REG_ADD_AN1_HIGH</variable><variable id="weih^.u9j(ou4yPOVBp*">REG_ADD_AN1_LOW</variable><variable id="90BsaBd7?9#ya[[v/jB#">REG_ADD_AN2_HIGH</variable><variable id="qg/-{g{UPnAhc@@,^H)I">REG_ADD_AN2_LOW</variable><variable id="!cO3=mC3YSQAa34Uz6o0">REG_ADD_DIP</variable><variable id="-YWH5;d#i~fh[b+uHN[2">REG_ADD_RESET</variable></variables><block type="pxt-on-start" id=";ogyE`.lJvcOT|p,#W(m" x="20" y="20"><statement name="HANDLER"><block type="variables_set" id="W3m%]6Pa~h}z/YkQ{/NM"><field name="VAR" id="1^dNyKL2ls+],o:{U5Zu">REG_ADD_REVISION</field><comment pinned="false" h="80" w="160">Register address.</comment><value name="VALUE"><shadow type="math_number" id="$fbnSWG3~bMYcpvW)`O;"><field name="NUM">0</field></shadow></value><next><block type="variables_set" id="V8F=Y;puTMgkeNIrP*r0"><field name="VAR" id="Y3hc*Bt=MR3O4uSW}!Xh">I2C_ADDRESS</field><value name="VALUE"><shadow type="math_number" id="r8-:[*v$+(893ebMw!;L"><field name="NUM">9</field></shadow></value><next><block type="variables_set" id="%53C~pyW?j(L#+tOI9*#"><field name="VAR" id="!nZ{m_=rpqk]B`4Gra.X">REG_ADD_SERVO_1</field><value name="VALUE"><shadow type="math_number" id="6^wfWSqsWX9GxXstG-fJ"><field name="NUM">1</field></shadow></value><next><block type="variables_set" id="#!kLfSNmwCc-Os?KYz0-"><field name="VAR" id="yoSh9{fX`x%;eSn`hUl~">REG_ADD_SERVO_2</field><value name="VALUE"><shadow type="math_number" id="3-Y0c2NArt,8P#wvsP~}"><field name="NUM">2</field></shadow></value><next><block type="variables_set" id="2R2-L4O1GW$=Lz=##WoV"><field name="VAR" id="j;,!gwkC`g4!#E?M#Y[%">REG_ADD_PWM1</field><value name="VALUE"><shadow type="math_number" id="@Ff_SeJBgq^}_`MI{~rG"><field name="NUM">3</field></shadow></value><next><block type="variables_set" id="L:Jv[;4,7HvE9gBIgoSH"><field name="VAR" id="PtU^d~lRd`fOAUl/Yc*q">REG_ADD_DIR1</field><value name="VALUE"><shadow type="math_number" id="i(^.e$ch+#!~#x9mL=Nj"><field name="NUM">4</field></shadow></value><next><block type="variables_set" id="EsgXC]Phw)}S_Fp9Uq{n"><field name="VAR" id="$-8}Ga]T$d,)rnCX@f-G">REG_ADD_PWM2</field><value name="VALUE"><shadow type="math_number" id="ChPi7yLzwqhcr4vvM:1U"><field name="NUM">5</field></shadow></value><next><block type="variables_set" id="lNg=q|0XD;gVhvn,m_CD"><field name="VAR" id="s%czyZDM}vX6KVaR^1[;">REG_ADD_DIR2</field><value name="VALUE"><shadow type="math_number" id="p,QmkE$}R87Xnp[,FAqF"><field name="NUM">6</field></shadow></value><next><block type="variables_set" id="e#laDOrk`5B8}}tK|}b^"><field name="VAR" id="4]lKx)6*-=|!)J@uAh=S">REG_ADD_VIN_HIGH</field><value name="VALUE"><shadow type="math_number" id="3Z$f|Of004A.*6.h`U]}"><field name="NUM">7</field></shadow></value><next><block type="variables_set" id="xQ[iVxILj=Nn?MwhsDIk"><field name="VAR" id="?RI![m`I0.)_~g|^I/|T">REG_ADD_VIN_LOW</field><value name="VALUE"><shadow type="math_number" id="52svy989tjv-F?ez7$S-"><field name="NUM">8</field></shadow></value><next><block type="variables_set" id="6Gb~Sv,U)h70-pI9wWdN"><field name="VAR" id="~(lsVZJ;spvH@.6,]RgH">REG_ADD_AN1_HIGH</field><value name="VALUE"><shadow type="math_number" id="70}1vqIID`Hq;%+[dqm5"><field name="NUM">9</field></shadow></value><next><block type="variables_set" id="Z,+S`k$R#j`@@l]k4AL~"><field name="VAR" id="weih^.u9j(ou4yPOVBp*">REG_ADD_AN1_LOW</field><value name="VALUE"><shadow type="math_number" id="T{^[5`,z2:A|]G_Ve]uK"><field name="NUM">10</field></shadow></value><next><block type="variables_set" id="RQJ{IZA|Euu;[P9A0HXD"><field name="VAR" id="90BsaBd7?9#ya[[v/jB#">REG_ADD_AN2_HIGH</field><value name="VALUE"><shadow type="math_number" id="IpPQ9/d#|HfhjUQ-154U"><field name="NUM">11</field></shadow></value><next><block type="variables_set" id="H4Q~+}W(w7[r6Z3r{O-K"><field name="VAR" id="qg/-{g{UPnAhc@@,^H)I">REG_ADD_AN2_LOW</field><value name="VALUE"><shadow type="math_number" id="%#]-gzcC?)gk)dO;otx9"><field name="NUM">12</field></shadow></value><next><block type="variables_set" id="Oo}Pqu|yC~q1(LAB=bq9"><field name="VAR" id="!cO3=mC3YSQAa34Uz6o0">REG_ADD_DIP</field><value name="VALUE"><shadow type="math_number" id="$ft^~G.!7R14lzW;tX{k"><field name="NUM">13</field></shadow></value><next><block type="variables_set" id="}gf8,iC2RHE]!VAgyKe8"><field name="VAR" id="-YWH5;d#i~fh[b+uHN[2">REG_ADD_RESET</field><value name="VALUE"><shadow type="math_number" id="(QOuEy,iuqJ.saD@:*Cb"><field name="NUM">14</field></shadow></value><next><block type="device_set_pull" id=";n,@r8[GWx}btS+2c9Ap"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="cr1VL5PH~}61kkkYB9jc"><field name="pin">DigitalPin.P16</field></shadow></value><next><block type="device_set_pull" id=";o%Sb-`ZN}DxFz@=w:n["><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="_?;(7g;+27rt9VDxE%kg"><field name="pin">DigitalPin.P15</field></shadow></value><next><block type="device_set_pull" id="Rl6AOhr!?dju_E.=g([s"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="vico~1~HEG!LL7:5ko4M"><field name="pin">DigitalPin.P14</field></shadow></value><next><block type="device_set_pull" id="u)BGp0XF]|!p)?{6:j9/"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="EZaNxdJ2my;Ett{P{612"><field name="pin">DigitalPin.P13</field></shadow></value><next><block type="device_set_pull" id="?riw!hom$$[J_hx*O}3e"><field name="pull">PinPullMode.PullUp</field><value name="pin"><shadow type="digital_pin_shadow" id="?Y.^p6{hv?W]LC97lQKY"><field name="pin">DigitalPin.P12</field></shadow></value><next><block type="typescript_statement" id="?i.Ckya3V!|v4]52+GdP"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace sumobit {&#13;" line1="&#13;" line2="brakeMotor(MotorChannel.MR);&#13;" line3="brakeMotor(MotorChannel.ML);&#13;" line4="&#13;" line5="// Disable the servos.&#13;" line6="disableServo(ServoChannel.S1);&#13;" line7="disableServo(ServoChannel.S2);&#13;" line8="&#13;" line9="/**&#13;" line10=" * Limit the range of a number.&#13;" line11=" * @param value The number we want to limit.&#13;" line12=" * @param min Minimum value of the number.&#13;" line13=" * @param max Maximum value of the number.&#13;" line14=" */&#13;" line15="//% blockHidden=true&#13;" line16="//% blockId=sumobit_limit&#13;" line17="export function limit(value: number, min: number, max: number): number {&#13;" line18="    if (value &lt; min) {&#13;" line19="        value = min;&#13;" line20="    }&#13;" line21="    else if (value &gt; max) {&#13;" line22="        value = max;&#13;" line23="    }&#13;" line24="    return value;&#13;" line25="}&#13;" line26="&#13;" line27="&#13;" line28="/**&#13;" line29="     * I2C read from the register of RP2040.&#13;" line30="     * @param register Register address.&#13;" line31="     */&#13;" line32="//% blockHidden=true&#13;" line33="//% blockId=sumobit_i2c_read&#13;" line34="export function i2cRead(register: number): number {&#13;" line35="    let value = 0;&#13;" line36="    pins.i2cWriteNumber(I2C_ADDRESS, register, NumberFormat.UInt8LE, true);&#13;" line37="    value = pins.i2cReadNumber(I2C_ADDRESS, NumberFormat.UInt8LE);&#13;" line38="    return value;&#13;" line39="}&#13;" line40="&#13;" line41="&#13;" line42="&#13;" line43="/**&#13;" line44=" * I2C write to the register of RP2040.&#13;" line45=" * @param register Register address.&#13;" line46=" * @param data Data to write.&#13;" line47=" */&#13;" line48="//% blockHidden=true&#13;" line49="//% blockId=sumobit_i2c_write&#13;" line50="export function i2cWrite(register: number, data: number): void {&#13;" line51="    let buffer = pins.createBuffer(2);&#13;" line52="    buffer[0] = register;&#13;" line53="    buffer[1] = data;&#13;" line54="    pins.i2cWriteBuffer(I2C_ADDRESS, buffer);&#13;" line55="}&#13;" line56="    &#13;" line57="&#13;" line58="}" numlines="59"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>